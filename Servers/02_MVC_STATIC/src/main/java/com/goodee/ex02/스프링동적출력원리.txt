contextPath 속성(attribute)으로 저장합니다.
contextPath 속성에 저장되는 값입니다.
application에 저장된 속성은 애플리케이션
즉, 모든 JSP가 contextPath 속성을 사용할 수 있다.

<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<c:set var="contextPath" value="${pageContext.request.contextPath}" scope="application"/>
여기서 scope="application"를 사용하면 이 contextPath가 이 패키지 공통적으로 적용되는데
scope="page"로 하면 다른 파일갈때 contextPath가 적용이 안됨

고로, 팀원들이 알수있도록 application보다는 page를 써서 매 페이지다 c:set scope="page" 써주기

스프링 동작 자세히 살펴보기

1. 사용자가 요청한다.
   <a href="${contextPath}/list">

2. DispatcherServlet이 요청을 받는다.

3. DispatcherServlet은 요청을 어떤 컨트롤러가 처리하는지 판단하는 HandlerMapping을 부른다.

4. HandlerMapping에 의해서 요청을 처리하는 Controller가 호출된다.

5. Controller가 요청을 처리하고 응답을 담당하는 ModelAndView를 부른다. 
   Model : JSP에서는 request 값을 전달하고, 스프링에서는 Model로 값을 전달한다.
   Model and View는 옛날꺼라 보이면 그 코드 쓰지말고 Model 코드를 써라.

6. ModelAndView가 전달할 값과 전달할 뷰(JSP)를 DispatcherServlet에게 전달한다. 

7. DispatcherServlet은 응답할 정보를 ViewResolver에게 전달한다. 

8. ViewResolver는 응답할 뷰(JSP: return "/WEB-INF/views/list.jsp") 정보를 만들어서 
다시 DispatcherServlet에게 전달한다.

9. DispatcherServlet이 응답할 뷰로 이동한다.